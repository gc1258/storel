'''
    1.加载所有的测试用例
    2.执行用例并生成测试报告
'''
from HTMLTestRunner import HTMLTestRunner
import unittest
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.header import Header
from email.utils import formataddr

# 1.加载所有用例
tests = unittest.defaultTestLoader.discover(r"F:\python\Python作业代码\作业\day14\day14【参数化测试】\任务代码",pattern="*Test.py")

# 2.创建运行器
runner = HTMLTestRunner(
    title = "存钱的测试报告",
    description="这是存钱的测试报告",
    verbosity=1,
    stream = open(file="存钱功能.html",mode="wb")
)

# 3.执行用例
runner.run(tests)




# 4.任务： 使用邮件发送附件，把报告发送给我
smtpserver = 'smtp.163.com'
#发送人邮箱地址与授权码
user = "a1711570217@163.com"
password = "AWPYRYNASKYBWKKF"
#发送人邮箱(已有user，可要可不要，不要则替换下方msgRoot[]，smtp.sendmail的sender)
sender = "a1711570217@163.com"
#收件人
receive = ['1711570217@qq.com']

#邮件标题
subject = '存钱功能测试报告'
#邮件内容
content = "/h1<html><h1 style='color:blue'>存钱功能的测试报告,附件为测试结果<></html>"


#附件地址
send_file = open(r"bank.xls","rb").read()



msgRoot = MIMEMultipart()
msgRoot.attach(MIMEText(content,'xls','utf-8'))
msgRoot['Subject'] = subject
msgRoot['From'] = formataddr((str(Header('吴鼎','utf-8')),sender))
msgRoot['To'] = ','.join(receive)
#附件
att = MIMEText(send_file,"base64",'utf-8')
att['Content-Type'] = 'application/octet-stream'
# att['Content-Disposition'] = 'attachment;filename="计算器.html"' % str.encode("utf-8")
att.add_header('Content-Disposition','attachment',filename='bank.xls')
msgRoot.attach(att)


#开始发送
smtp = smtplib.SMTP()
smtp.connect(smtpserver)
smtp.login(user,password)
smtp.sendmail(sender,receive,msgRoot.as_string())
smtp.quit()



